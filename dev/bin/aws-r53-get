#!/bin/bash

function complete {
  cat <<'EOF'
#compdef aws-r53-get
_aws_r53_get() {
  local -a records zones
  local expl
  if ((CURRENT == 2)); then
    local profiles=("${(@f)$(aws configure list-profiles)}")
    _wanted profiles expl 'profile name' compadd -a profiles
  elif ((CURRENT == 3)); then
    local cache_dir="${HOME}/.cache/aws-r53"
    local zones_cache_file="${cache_dir}/${words[2]}_zones.cache"
    if [[ -f "${zones_cache_file}" ]]; then
      zones=("${(@f)$(cat "${zones_cache_file}")}")
    else
      local hosted_zones=$(aws --profile "${words[2]}" route53 list-hosted-zones --query 'HostedZones[*].[Id,Name,Config.PrivateZone]' --output text)
      for hosted_zone in "${(@f)hosted_zones}"; do
        local zone_id=$(echo "${hosted_zone}" | cut -f1 | tr -d '/hostedzone/')
        local zone_name=$(echo "${hosted_zone}" | cut -f2)
        local zone_type=$([[ "$(echo "${hosted_zone}" | cut -f3)" == "True" ]] && echo "private" || echo "public")
        zones+=("${zone_id}_${zone_name%.}_${zone_type}")
      done
      mkdir -p "${cache_dir}"
      echo "${zones}" | tr ' ' '\n' > "${zones_cache_file}"
    fi
    _wanted zones expl 'hosted zone' compadd -a zones
  elif ((CURRENT == 4)); then
    local cache_dir="${HOME}/.cache/aws-r53"
    local zone_id=$(echo "${words[3]}" | cut -d'_' -f1)
    local records_cache_file="${cache_dir}/${words[3]}.cache"
    if [[ -f "${records_cache_file}" ]]; then
      records=("${(@f)$(cat "${records_cache_file}")}")
    else
      local zone_records=$(aws --profile "${words[2]}" route53 list-resource-record-sets --hosted-zone-id "${zone_id}" --query 'ResourceRecordSets[*].Name' --output text | tr '\t' '\n')
      records+=("${(@f)zone_records}")
      mkdir -p "${cache_dir}"
      echo "${records}" | tr ' ' '\n' > "${records_cache_file}"
    fi
    _wanted records expl 'record name' compadd -a records
  fi
  return 0
}
compdef _aws_r53_get aws-r53-get
EOF
  exit 0
}

case $1 in
  complete) complete ;;
esac

RECORD=`aws --profile "${1}" route53 list-resource-record-sets --hosted-zone-id "${2%%_*}" --query "ResourceRecordSets[?Name=='$3'].ResourceRecords[0].Value" --output text`
echo $RECORD | jq 2>/dev/null || echo $RECORD
